- hosts: localhost
  connection: local
  gather_facts: false
  tasks: 
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create project VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout  

    - debug:
        var: vpcout

     - name: create Public Subnet 1 In Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-pubsub1
      register: pubsub1_out

    - debug:
        var: pubsub1_out    

    - name: create Public Subnet 2 In Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-pubsub2
      register: pubsub2_out

    - debug:
        var: pubsub2_out

    - name: create Public Subnet 3 In Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-pubsub3
      register: pubsub3_out

    - debug:
        var: pubsub3_out

    - name: create Private Subnet 1 In Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-privsub1
      register: privsub1_out

    - debug:
        var: privsub1_out

    - name: create Private Subnet 2 In Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-privsub2
      register: privsub2_out

    - debug:
        var: privsub2_out

    - name: create Private Subnet 3 In Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: project-privsub3
      register: privsub3_out

    - debug:
        var: privsub3_out

    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: project_IGW
      register: igw_out 

    - debug:
        var: igw_out  

    - name: set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: project_pubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"    
      register: pubRT_out

    - debug:
        var: pubRT_out

    - name: Create new nat gateway, using an EIP address  and wait for available status.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - debug:
        var: NATGW_out        

    - name: set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: project_privRT
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.gateway_id}}"    
      register: privRT_out

    - debug:
        var: privRT_out
      
    - debug:
        var:"{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id     
        - igw_out.gateway_id
        - NATGW_out.gateway_id
        - pubRT_out.route_table.id
        - privRT_out.route_table.id

    - name: create variable file for vpc output
      copy:
        content: "region: {{ region }}\nvpcid: {{ vpcout.vpc.id }}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\npubsub3id: {{ pubsub3_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\nprivsub2id: {{ privsub2_out.subnet.id }}\nprivsub3id: {{ privsub3_out.subnet.id }}\nigwid: {{ igw_out.gateway_id }}\npubRTid: {{ pubRT_out.route_table.id }}\nprivRTid: {{ privRT_out.route_table.id }}\nnatgwid: {{ NATGW_out.gateway_id }}\n"    
        dest: vars/output_vars